{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/apartment/apartment.component.css","webpack:///./src/app/components/apartment/apartment.component.html","webpack:///./src/app/components/apartment/apartment.component.ts","webpack:///./src/app/components/apartment/create-apartment/create-apartment.component.css","webpack:///./src/app/components/apartment/create-apartment/create-apartment.component.html","webpack:///./src/app/components/apartment/create-apartment/create-apartment.component.ts","webpack:///./src/app/components/apartment/list-apartment/list-apartment.component.css","webpack:///./src/app/components/apartment/list-apartment/list-apartment.component.html","webpack:///./src/app/components/apartment/list-apartment/list-apartment.component.ts","webpack:///./src/app/components/booking/booking.component.css","webpack:///./src/app/components/booking/booking.component.html","webpack:///./src/app/components/booking/booking.component.ts","webpack:///./src/app/components/booking/list-booking/list-booking.component.css","webpack:///./src/app/components/booking/list-booking/list-booking.component.html","webpack:///./src/app/components/booking/list-booking/list-booking.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/property/create-property/create-property.component.css","webpack:///./src/app/components/property/create-property/create-property.component.html","webpack:///./src/app/components/property/create-property/create-property.component.ts","webpack:///./src/app/components/property/create-property/upload-photo-list/upload-photo-list.component.css","webpack:///./src/app/components/property/create-property/upload-photo-list/upload-photo-list.component.html","webpack:///./src/app/components/property/create-property/upload-photo-list/upload-photo-list.component.ts","webpack:///./src/app/components/property/edit-property/edit-property.component.css","webpack:///./src/app/components/property/edit-property/edit-property.component.html","webpack:///./src/app/components/property/edit-property/edit-property.component.ts","webpack:///./src/app/components/property/list-property/list-property.component.css","webpack:///./src/app/components/property/list-property/list-property.component.html","webpack:///./src/app/components/property/list-property/list-property.component.ts","webpack:///./src/app/components/property/list-property/property-item/property-item.component.css","webpack:///./src/app/components/property/list-property/property-item/property-item.component.html","webpack:///./src/app/components/property/list-property/property-item/property-item.component.ts","webpack:///./src/app/components/property/photo-list/photo-list.component.css","webpack:///./src/app/components/property/photo-list/photo-list.component.html","webpack:///./src/app/components/property/photo-list/photo-list.component.ts","webpack:///./src/app/components/property/photo/photo.component.css","webpack:///./src/app/components/property/photo/photo.component.html","webpack:///./src/app/components/property/photo/photo.component.ts","webpack:///./src/app/components/property/property.component.css","webpack:///./src/app/components/property/property.component.html","webpack:///./src/app/components/property/property.component.ts","webpack:///./src/app/components/review/review.component.css","webpack:///./src/app/components/review/review.component.html","webpack:///./src/app/components/review/review.component.ts","webpack:///./src/app/components/search/search-form/search-form.component.css","webpack:///./src/app/components/search/search-form/search-form.component.html","webpack:///./src/app/components/search/search-form/search-form.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/user/login/login.component.css","webpack:///./src/app/components/user/login/login.component.html","webpack:///./src/app/components/user/login/login.component.ts","webpack:///./src/app/components/user/register/register.component.css","webpack:///./src/app/components/user/register/register.component.html","webpack:///./src/app/components/user/register/register.component.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/helpers/jwt.interceptor.ts","webpack:///./src/app/models/booking.ts","webpack:///./src/app/models/create-apartment.ts","webpack:///./src/app/models/property-create.ts","webpack:///./src/app/services/apartment/apartment.service.ts","webpack:///./src/app/services/authentication/auth.service.ts","webpack:///./src/app/services/booking/booking.service.ts","webpack:///./src/app/services/city/city.service.ts","webpack:///./src/app/services/country/coutry.service.ts","webpack:///./src/app/services/property/property.service.ts","webpack:///./src/app/services/propertyTypy/property-type.service.ts","webpack:///./src/app/services/review/review.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport {ListPropertyComponent} from './components/property/list-property/list-property.component';\r\n\r\nimport { CreatePropertyComponent } from './components/property/create-property/create-property.component';\r\n\r\nimport {ListApartmentComponent} from './components/apartment/list-apartment/list-apartment.component';\r\nimport {CreateApartmentComponent} from './components/apartment/create-apartment/create-apartment.component';\r\n\r\nimport {SearchComponent} from './components/search/search.component';\r\nimport {EditPropertyComponent} from './components/property/edit-property/edit-property.component';\r\nimport {PropertyComponent} from './components/property/property.component';\r\n\r\nimport { ListBookingComponent } from './components/booking/list-booking/list-booking.component';\r\nimport { BookingComponent } from './components/booking/booking.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'bookings', component: ListBookingComponent },\r\n  { path: 'booking/:id', component: BookingComponent },\r\n  { path: 'create-property', component: CreatePropertyComponent },\r\n  { path: 'property-list', component: ListPropertyComponent},\r\n\r\n  { path: 'property-list/apartment-list', component: ListApartmentComponent},\r\n  { path: 'create-apartment', component: CreateApartmentComponent},\r\n\r\n  { path: 'apartment-list', component: ListApartmentComponent},\r\n  { path: 'create-apartment', component: CreateApartmentComponent},\r\n  { path: 'search', component: SearchComponent},\r\n  { path: 'edit-property/:id', component: EditPropertyComponent },\r\n  { path: 'property-detailes/:id', component: PropertyComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule {\r\n }\r\n","module.exports = \"\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <app-header></app-header>\\r\\n  <nav>\\r\\n    <ul>\\r\\n      <li><a routerLink=\\\"/login\\\">Login</a></li>\\r\\n      <li><a routerLink=\\\"/booking\\\">Booking</a></li>\\r\\n      <li><a routerLink=\\\"/property-list\\\">PropertyList</a></li>\\r\\n      <li><a routerLink=\\\"/create-apartment\\\">Create Apartment</a></li>\\r\\n      <li><a routerLink=\\\"/edit-property/1\\\">Edit Property1</a></li>\\r\\n      <li><a routerLink=\\\"/property-detailes/1\\\">Property1 Details</a></li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'bookingliteClient';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HttpClientModule, HTTP_INTERCEPTORS  } from '@angular/common/http';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport { PropertyComponent } from './components/property/property.component';\r\nimport { CreatePropertyComponent } from './components/property/create-property/create-property.component';\r\nimport { ListPropertyComponent } from './components/property/list-property/list-property.component';\r\nimport { ApartmentComponent } from './components/apartment/apartment.component';\r\nimport { CreateApartmentComponent } from './components/apartment/create-apartment/create-apartment.component';\r\nimport { ListApartmentComponent } from './components/apartment/list-apartment/list-apartment.component';\r\nimport { BookingComponent } from './components/booking/booking.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { ListBookingComponent } from './components/booking/list-booking/list-booking.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport {JwtInterceptor} from './helpers/jwt.interceptor';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport {PhotoComponent} from './components/property/photo/photo.component';\r\nimport { PhotoListComponent } from './components/property/photo-list/photo-list.component';\r\nimport { UploadPhotoListComponent } from './components/property/create-property/upload-photo-list/upload-photo-list.component';\r\n\r\n\r\n\r\nimport { PropertyItemComponent } from './components/property/list-property/property-item/property-item.component';\r\nimport { PropertyService } from './services/property/property.service';\r\nimport { PropertyTypeService } from './services/propertyTypy/property-type.service';\r\nimport { ReviewComponent } from './components/review/review.component';\r\n\r\nimport { ApartmentService } from './services/apartment/apartment.service';\r\n\r\nimport { CoutryService } from './services/country/coutry.service';\r\nimport { CityService } from './services/city/city.service';\r\nimport {SearchFormComponent} from './components/search/search-form/search-form.component';\r\nimport { EditPropertyComponent } from './components/property/edit-property/edit-property.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    PropertyComponent,\r\n    CreatePropertyComponent,\r\n    ListPropertyComponent,\r\n    ApartmentComponent,\r\n    CreateApartmentComponent,\r\n    ListApartmentComponent,\r\n    BookingComponent,\r\n    SearchComponent,\r\n    ListBookingComponent,\r\n    HeaderComponent,\r\n    PhotoComponent,\r\n    PhotoListComponent,\r\n    UploadPhotoListComponent,\r\n    PropertyItemComponent,\r\n    ReviewComponent,\r\n    SearchFormComponent,\r\n    EditPropertyComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    PropertyService,CoutryService,CityService,ApartmentService,PropertyTypeService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n\"","module.exports = \"<p>\\r\\n  apartment works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apartment',\r\n  templateUrl: './apartment.component.html',\r\n  styleUrls: ['./apartment.component.css']\r\n})\r\nexport class ApartmentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"input {\\r\\n  width: 20%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <fieldset>\\r\\n    <h4>Create Apartment</h4>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"quantity\\\" id=\\\"inputDefault\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <h5>Apartment Type</h5>\\r\\n      <div class=\\\"custom-control custom-radio\\\" *ngFor=\\\"let type of apartmentTypes\\\">\\r\\n        <input type=\\\"radio\\\" id=\\\"customRadio{{type.id}}\\\"\\r\\n               name=\\\"customRadio\\\" class=\\\"custom-control-input\\\" (click)=\\\"createdApartment.typeId = type.id\\\">\\r\\n        <label class=\\\"custom-control-label\\\" for=\\\"customRadio{{type.id}}\\\">{{type.name}}</label>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <h5>Amenities</h5>\\r\\n      <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let am of amenities\\\">\\r\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck{{am.id}}\\\"\\r\\n          (change)=\\\"workWithCheckboxes(am.id)\\\">\\r\\n        <label class=\\\"custom-control-label\\\" for=\\\"customCheck{{am.id}}\\\">{{am.name}}</label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createApartments()\\\">save</button>\\r\\n  </fieldset>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ApartmentType} from '../../../models/apartment-type';\r\nimport {Amenity} from '../../../models/amenity';\r\nimport {Apartment} from '../../../models/apartment';\r\nimport {ApartmentService} from '../../../services/apartment/apartment.service';\r\nimport {AuthService} from '../../../services/authentication/auth.service';\r\nimport {CreateApartment} from '../../../models/create-apartment';\r\n\r\n@Component({\r\n  selector: 'app-create-apartment',\r\n  templateUrl: './create-apartment.component.html',\r\n  styleUrls: ['./create-apartment.component.css']\r\n})\r\nexport class CreateApartmentComponent implements OnInit {\r\n\r\n  private authenticated;\r\n  apartmentTypes: ApartmentType[];\r\n  amenities: Amenity[];\r\n  createdApartment: CreateApartment;\r\n\r\n  constructor(private auth: AuthService,\r\n    private apartmentService: ApartmentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authenticated = this.auth.isAuthenticated;\r\n    this.getApartmentType();\r\n    this.getAmenities();\r\n    this.createdApartment = new CreateApartment();\r\n    this.createdApartment.amenitiesId = [];\r\n  }\r\n\r\n  public getApartmentType() {\r\n    this.apartmentService.getApartmentType().subscribe(type => {\r\n      this.apartmentTypes = type;\r\n      console.log('Apartment Tepes: ', type);\r\n    });\r\n  }\r\n\r\n  public getAmenities() {\r\n    this.apartmentService.getAmenities().subscribe(amenity => {\r\n      this.amenities = amenity;\r\n      console.log('Amenities: ', amenity);\r\n    });\r\n  }\r\n\r\n  public createApartments() {\r\n    console.log(this.createdApartment.amenitiesId);\r\n    //this.apartmentService.createApartment(this.createdApartment);\r\n  }\r\n\r\n  public workWithCheckboxes(id: number) {\r\n    const index = this.createdApartment.amenitiesId.indexOf(id);\r\n    if (index !== -1) {\r\n      this.createdApartment.amenitiesId.splice(index, 1);\r\n      return;\r\n    }\r\n    this.createdApartment.amenitiesId.push(id);\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  border: 1px solid #dddddd;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\nth {\\r\\n  background-color: #fffe82;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Apartments List</h1>\\r\\n\\r\\n  <table>\\r\\n    <tr>\\r\\n      <th>Name</th>\\r\\n      <th>Amenities</th>\\r\\n      <th>Price</th>\\r\\n      <th>Reserve</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let apartment of aprtmentsList\\\">\\r\\n      <td>{{apartment.name}}</td>\\r\\n      <td><p *ngFor=\\\"let am of apartment.amenities\\\">{{am.name}}</p></td>\\r\\n      <td>{{apartment.price}}</td>\\r\\n      <td><a href=\\\"#\\\" class=\\\"btn btn-primary\\\">select</a></td> <!--booking-->\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../../services/authentication/auth.service';\r\nimport {ApartmentService} from '../../../services/apartment/apartment.service';\r\nimport {Apartment} from '../../../models/apartment';\r\n\r\n@Component ({\r\n  selector: 'app-list-apartment',\r\n  templateUrl: './list-apartment.component.html',\r\n  styleUrls: ['./list-apartment.component.css']\r\n})\r\nexport class ListApartmentComponent implements OnInit {\r\n\r\n  private authenticated;\r\n  aprtmentsList: Apartment[];\r\n\r\n  constructor(private apartmentService: ApartmentService,\r\n              private auth: AuthService ) { }\r\n\r\n  ngOnInit() {\r\n    this.authenticated = this.auth.isAuthenticated;\r\n    this.getApartments();\r\n  }\r\n\r\n  public getApartments() {\r\n    this.apartmentService.getAllApartments().subscribe(apartment => {\r\n      this.aprtmentsList = apartment;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".image{\\r\\n  width: 220px;\\r\\n  height: 220px;\\r\\n}\\r\\n\"","module.exports = \"<h1>Booking</h1>\\r\\n\\r\\n<ul *ngIf=\\\"booking\\\" style=\\\"list-style: none\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <!-- <div class=\\\"col-md-3\\\">\\r\\n                  <img src={{property.photos[0]}}>\\r\\n                </div> -->\\r\\n                <div class=\\\"col-md-6  card-body\\\">\\r\\n                  <div class=\\\"list-title\\\">\\r\\n                    <ul class=\\\"list-inline list-unstyled\\\">\\r\\n                      <li class=\\\"list-inline-item\\\">\\r\\n                          <a routerLink=\\\"/booking/{{booking.bookingId}}\\\">\\r\\n                            <h4>Booking # {{booking.bookingId}}</h4>     \\r\\n                          </a>\\r\\n                      </li>\\r\\n                      <li class=\\\"list-inline-item text-warning\\\"><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i\\r\\n                        class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star-half\\\"></i></li>\\r\\n                      <li class=\\\"list-inline-item text-success\\\"><i class=\\\"fa fa-thumbs-up\\\"></i></li>\\r\\n                      <!-- <ul>\\r\\n                        <li><p *ngFor=\\\"let facility of property.facilities\\\">{{facility.name}}</p></li>\\r\\n                      </ul> -->\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-location\\\">\\r\\n                      <h4>Price: {{booking.totalPrice}} USD</h4>   \\r\\n                      <h4>Status: {{booking.bookingStatus.name}}</h4>    \\r\\n                  </div>\\r\\n                  <div class=\\\"list-descrip\\\">        \\r\\n                    <small>Dates: {{booking.checkIn | date:'dd-MM-yyyy' }} - {{booking.checkOut | date:'dd-MM-yyyy' }}</small>          \\r\\n                    <br>\\r\\n                    <small>Number of guests: {{booking.apartmentDto.numberOfGuests}}</small>                    \\r\\n                    <br><br>\\r\\n                    <h5>Apartment:</h5>\\r\\n                    <small>Actual Price: {{booking.apartmentDto.price}} USD</small>                      \\r\\n                    <br>\\r\\n                    <small>Amenties: \\r\\n                      <small *ngFor= \\\"let am of booking.apartmentDto.amenities\\\">{{am.name}}; </small>\\r\\n                    </small>                      \\r\\n                    <br>\\r\\n                    <small>Number of guests: {{booking.apartmentDto.numberOfGuests}}</small>                      \\r\\n                    <br><br>\\r\\n                    <h5>Hotel:</h5>\\r\\n                    <small>Rating: </small>                      \\r\\n                    <br>\\r\\n                    <small>Address: </small>                      \\r\\n                    <br>\\r\\n                    <small>Phone number: </small>                      \\r\\n                    <br>\\r\\n                    <small>Email: </small>                      \\r\\n                    <br>\\r\\n                    <div *ngIf= \\\"booking?.reviewDto\\\">\\r\\n                      <br>\\r\\n                      <h5>Your review:</h5>\\r\\n                      <small>Rating: {{booking.reviewDto.rating}}</small>\\r\\n                      <br>\\r\\n                      <small>Message: {{booking.reviewDto.message}}</small>\\r\\n                      <br>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-md-3 border-left card-body\\\">\\r\\n                    <ul class=\\\"list-unstyled\\\">\\r\\n                      <li><h4>Status: {{booking.bookingStatus.name}}</h4></li>                    \\r\\n                      <li><h3>Price: {{booking.totalPrice}} </h3></li>\\r\\n                       <li class=\\\"text-secondary\\\">\\r\\n                        <small> Reviews</small>\\r\\n                        <small>{property.review}</small>-->\\r\\n                      <!-- </li> --> \\r\\n                    <!-- </ul> -->\\r\\n                    <!-- <button type=\\\"button\\\" routerLink=\\\"\\\" class=\\\"btn btn-outline-primary\\\">Available apartment</button> -->\\r\\n                  <!-- </div> --> \\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</ul>\\r\\n\\r\\n<!-- <ul>\\r\\n  <li *ngIf=\\\"booking\\\">\\r\\n   <h4>Booking # {{booking.bookingId}}</h4>\\r\\n   <h6>bookingStatus- {{booking.bookingStatus.name}} </h6>\\r\\n   <h6>apartmentType - {{booking.apartmentDto.apartmentType.name}} </h6>\\r\\n   <h6>Name apartmentDto - {{booking.apartmentDto.name}} </h6>\\r\\n   <h6>checkIn - {{booking.checkIn | date }} </h6>\\r\\n   <h6>checkOut- {{booking.checkOut | date }} </h6>\\r\\n</ul> -->\\r\\n\\r\\n<div class=\\\"col-md-3 border-left card-body\\\">\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <button (click)=\\\"backToBookings()\\\">Back to bookings</button>\\r\\n    <br>\\r\\n     <!-- <div *ngIf=\\\"booking\\\"> -->\\r\\n        <div *ngIf=\\\"isCheckBookingDate(booking?.checkIn, booking?.checkOut) && \\r\\n              !isCanceled(booking?.bookingStatus?.name)\\\"> <!--safe operator, or above comment-->\\r\\n            <button (click)=\\\"cancelBooking()\\\">Cancel Booking</button>\\r\\n         </div>\\r\\n      <!-- </div> -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <div *ngIf=\\\"booking && !isCheckBookingDate(booking?.checkIn, booking?.checkOut) && \\r\\n           !isCanceled(booking?.bookingStatus?.name) && !booking?.reviewDto?.id\\\">\\r\\n <textarea rows= \\\"5\\\" cols= \\\"120\\\" placeholder= \\\"Enter your review here\\\"></textarea>   <!-- move to css -->       \\r\\n<!-- </div> --> \\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {Booking} from '../../models/booking';\r\nimport {BookingService} from '../../services/booking/booking.service';\r\nimport {AuthService} from '../../services/authentication/auth.service';\r\nimport { ActivatedRoute } from '../../../../node_modules/@angular/router';\r\nimport { Router } from \"@angular/router\";\r\n//import { DateFormatPipe } from '../../helpers/DateFormatPipe'\r\n\r\n\r\n@Component({\r\n  selector: 'app-booking',\r\n  templateUrl: './booking.component.html',\r\n  styleUrls: ['./booking.component.css']\r\n})\r\nexport class BookingComponent implements OnInit {\r\n\r\n  @Input() booking: Booking;\r\n  private bookingsUrl = '/bookings';\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private bookingService: BookingService,\r\n    private router: Router \r\n  //private dateFormatPipe: DateFormatPipe\r\n) {}\r\n  // constructor(private bookingService: BookingService,\r\n  //             private auth: AuthService ) { }\r\n  ngOnInit() {\r\n     this.getBooking();\r\n  }\r\n\r\n  getBooking(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.bookingService.getBooking(id)\r\n      .subscribe(booking => this.booking = booking);\r\n  }\r\n\r\n  cancelBooking() {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.bookingService.cancelBookings(id)\r\n      .subscribe(res => {console.log('cancellllll done');\r\n      this.backToBookings();\r\n      });\r\n  }  \r\n\r\n  isCheckBookingDate(checkIn, checkOut):boolean {\r\n    //console.log('111111111111111111111', this.bookingService.isCheckBookingDate(checkIn, checkOut));\r\n    return this.bookingService.isCheckBookingDate(checkIn, checkOut)\r\n  }\r\n\r\n  isCanceled( bookingStatus: string):boolean {\r\n    return  this.bookingService.isCanceled(bookingStatus);\r\n  }\r\n\r\n  isReview(idReview){\r\n    console.log('Hello in isReview');\r\n    if( !idReview ){ //if negative, undefined, null, empty then..\r\n      console.log('in isReview true');\r\n      return true;\r\n    }\r\n    else  {\r\n      console.log('in isReview true');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  backToBookings(){\r\n    this.router.navigate([this.bookingsUrl]);\r\n  }\r\n\r\n}","module.exports = \"\"","module.exports = \"<h1>Bookings</h1>\\r\\n\\r\\n<ul style=\\\"list-style: none\\\">\\r\\n  <li *ngFor=\\\"let booking of bookings\\\">\\r\\n      <div *ngIf=\\\" isCheckBookingDate(booking.checkIn, booking.checkOut)\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <!-- <img src={{property.photos[0]}}> -->\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6  card-body\\\">\\r\\n                  <div class=\\\"list-title\\\">\\r\\n                    <ul class=\\\"list-inline list-unstyled\\\">\\r\\n                      <li class=\\\"list-inline-item\\\">\\r\\n                          <a routerLink=\\\"/booking/{{booking.bookingId}}\\\">\\r\\n                            <h4>Booking # {{booking.bookingId}}</h4>     \\r\\n                          </a>\\r\\n                      </li>\\r\\n                      <li class=\\\"list-inline-item text-warning\\\"><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i\\r\\n                        class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star-half\\\"></i></li>\\r\\n                      <li class=\\\"list-inline-item text-success\\\"><i class=\\\"fa fa-thumbs-up\\\"></i></li>\\r\\n                      <!-- <ul>\\r\\n                        <li><p *ngFor=\\\"let facility of property.facilities\\\">{{facility.name}}</p></li>\\r\\n                      </ul> -->\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-location\\\">\\r\\n                      <small>Dates: {{booking.checkIn | date:'dd-MM-yyyy' }} - {{booking.checkOut | date:'dd-MM-yyyy' }}\\r\\n                        </small>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-descrip\\\">                    \\r\\n                    <small>Number of guests: {{booking.apartmentDto.numberOfGuests}}\\r\\n                    </small>\\r\\n                    <br>\\r\\n                    <small>Apartment type: {{booking.apartmentDto.apartmentType.name}}\\r\\n                    </small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3 border-left card-body\\\">\\r\\n                    <ul class=\\\"list-unstyled\\\">\\r\\n                      <li><h4>Status: </h4>\\r\\n                      <h4 *ngIf=\\\"isCanceled(booking.bookingStatus.name)\\\" style=\\\"color:red\\\">{{booking.bookingStatus.name}}</h4>\\r\\n                      <h4 *ngIf=\\\"!isCanceled(booking.bookingStatus.name)\\\"style=\\\"color:green\\\">{{booking.bookingStatus.name}}</h4>\\r\\n                      </li>                    \\r\\n                      <li><h3>Price: {{booking.totalPrice}}* </h3></li>\\r\\n                      <small> *number of days: {{calculateNumberOfDates(booking.checkIn , booking.checkOut )}}</small>\\r\\n                      <!-- <li class=\\\"text-secondary\\\">\\r\\n                        <small> Reviews</small>\\r\\n                        <small>{property.review}</small>-->\\r\\n                      <!-- </li> --> \\r\\n                    </ul>\\r\\n                    <!-- <button type=\\\"button\\\" routerLink=\\\"\\\" class=\\\"btn btn-outline-primary\\\">Available apartment</button> -->\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<ul style=\\\"list-style: none\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<br><hr><br>\\r\\n</div>\\r\\n</ul>\\r\\n\\r\\n<ul style=\\\"list-style: none\\\">\\r\\n  <li *ngFor=\\\"let booking of bookings\\\">\\r\\n      <div *ngIf=\\\"!isCheckBookingDate(booking.checkIn, booking.checkOut)\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <!-- <img src={{property.photos[0]}}> -->\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6  card-body\\\">\\r\\n                  <div class=\\\"list-title\\\">\\r\\n                    <ul class=\\\"list-inline list-unstyled\\\">\\r\\n                      <li class=\\\"list-inline-item\\\">\\r\\n                          <a routerLink=\\\"/booking/{{booking.bookingId}}\\\">\\r\\n                            <h4>Booking # {{booking.bookingId}}</h4>     \\r\\n                          </a>\\r\\n                      </li>\\r\\n                      <li class=\\\"list-inline-item text-warning\\\"><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i\\r\\n                        class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star-half\\\"></i></li>\\r\\n                      <li class=\\\"list-inline-item text-success\\\"><i class=\\\"fa fa-thumbs-up\\\"></i></li>\\r\\n                      <!-- <ul>\\r\\n                        <li><p *ngFor=\\\"let facility of property.facilities\\\">{{facility.name}}</p></li>\\r\\n                      </ul> -->\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-location\\\">\\r\\n                    <small>Dates: {{booking.checkIn | date:'dd-MM-yyyy' }} - {{booking.checkOut | date:'dd-MM-yyyy' }}\\r\\n                      </small>\\r\\n                </div>\\r\\n                <div class=\\\"list-descrip\\\">                    \\r\\n                  <small>Number of guests: {{booking.apartmentDto.numberOfGuests}}\\r\\n                  </small>\\r\\n                  <br>\\r\\n                  <small>Apartment type: {{booking.apartmentDto.apartmentType.name}}\\r\\n                  </small>\\r\\n                </div>\\r\\n                </div>\\r\\n                 <div class=\\\"col-md-3 border-left card-body\\\">\\r\\n                    <ul class=\\\"list-unstyled\\\">\\r\\n                      <li><h4>Status: {{booking.bookingStatus.name}}</h4></li>                    \\r\\n                      <li><h3>Price: {{booking.totalPrice}} </h3></li>\\r\\n                      <!-- <li class=\\\"text-secondary\\\">\\r\\n                        <small> Reviews</small>\\r\\n                        <small>{property.review}</small>-->\\r\\n                      <!-- </li> --> \\r\\n                    </ul>\\r\\n                    <div>\\r\\n                      <button type=\\\"button\\\" routerLink=\\\"\\\" class=\\\"btn btn-outline-primary\\\">Review</button>\\r\\n                    </div>\\r\\n                    </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<!-- <ng-container *ngFor=\\\"let booking of bookings\\\" >\\r\\n  <div *ngIf=\\\" isCheckBookingDate(booking.checkIn, booking.checkOut)\\\">\\r\\n    <a routerLink=\\\"/booking/{{booking.bookingId}}\\\">\\r\\n      <h4>Booking # {{booking.bookingId}}</h4>     \\r\\n    </a>\\r\\n    <h6>{{booking.checkIn | date:'dd-MM-yyyy' }} - {{booking.checkOut | date:'dd-MM-yyyy' }}</h6>\\r\\n    <h6>Booking status- {{booking.bookingStatus.name}}</h6>\\r\\n  </div>\\r\\n</ng-container>\\r\\n<br><hr><br>\\r\\n\\r\\n<ng-container *ngFor=\\\"let booking of bookings\\\" >\\r\\n    <div *ngIf=\\\"!isCheckBookingDate(booking.checkIn, booking.checkOut)\\\">\\r\\n        <a routerLink=\\\"/booking/{{booking.bookingId}}\\\">\\r\\n           <h4>Booking # {{booking.bookingId}}</h4>     \\r\\n        </a>\\r\\n        <h6>{{booking.checkIn | date:'dd-MM-yyyy' }} - {{booking.checkOut | date:'dd-MM-yyyy' }}</h6>\\r\\n        <h6>Booking status- {{booking.bookingStatus.name}}</h6>\\r\\n    </div>\\r\\n</ng-container> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { Booking } from '../../../models/booking';\r\nimport { BookingService } from '../../../services/booking/booking.service';\r\nimport { AuthService } from '../../../services/authentication/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-list-booking',\r\n  templateUrl: './list-booking.component.html',\r\n  styleUrls: ['./list-booking.component.css']\r\n})\r\nexport class ListBookingComponent implements OnInit {\r\n\r\n  authenticated;\r\n  bookings: Booking[];\r\n  today: Date;\r\n\r\n  constructor(private bookingService: BookingService,\r\n              private auth: AuthService ) { }\r\n\r\n  ngOnInit() {\r\n    this.authenticated = this.auth.isAuthenticated;\r\n    this.getBookings();\r\n    this.today =new Date();\r\n  }\r\n\r\n  getBookings(): void {\r\n    this.bookingService.getBookings().subscribe(bookings => {  this.bookings= bookings,\r\n      console.log('bbbb', bookings);\r\n    } );\r\n  }\r\n\r\n  isCanceled( bookingStatus: string):boolean {\r\n    return  this.bookingService.isCanceled(bookingStatus);\r\n  }\r\n\r\n  isCheckBookingDate(checkIn, checkOut):boolean {\r\n    return this.bookingService.isCheckBookingDate(checkIn, checkOut);\r\n  }\r\n\r\n  calculateNumberOfDates(checkIn, checkOut): number{\r\n    console.log('calculateNumberOfDates component');\r\n    return this.bookingService.calculateNumberOfDates(checkIn, checkOut);\r\n  }\r\n}","module.exports = \".hed-buts{\\r\\n  color: #3d5c5c;\\r\\n}\\r\\n.hed-buts:hover{\\r\\n  color: #1f2e2e;\\r\\n}\\r\\n.ion-md-body{\\r\\n  font-size: 24px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"search\\\">Bookinglite</a>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.auth.isAuthenticated\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"#\\\">My bookings</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <ng-container *ngIf=\\\"this.auth.isAuthenticated; else loginbot\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"#\\\"><i class=\\\"icon ion-md-body hed-buts\\\"></i></a>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"#\\\"><span class=\\\"hed-buts\\\">My profile</span></a>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"login\\\"><span class=\\\"hed-buts\\\">Log out</span></a>\\r\\n      </ng-container>\\r\\n      <ng-template #loginbot>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"login\\\"><span class=\\\"hed-buts\\\">Log in</span></a>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n  </nav>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from '../../services/authentication/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(public auth: AuthService) { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","module.exports = \".container {\\r\\n  width: 300px;\\r\\n  height: 400px;\\r\\n  position: absolute;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-50%,-50%);\\r\\n          transform: translate(-50%,-50%);\\r\\n  border: 1px solid black;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"col-form-label\\\">Property Name</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Property Name\\\" >\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"col-form-label\\\">Descpription</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Descpription\\\" >\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"col-form-label\\\">Phone number</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone number\\\" >\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"col-form-label\\\">Email</label>\\r\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" >\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"col-form-label\\\">Descpription</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Descpription\\\" >\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"col-form-label\\\">Country</label>\\r\\n    <select class=\\\"custom-select\\\">\\r\\n      <option *ngFor=\\\"let country of countries\\\" (change)=\\\"getCities(country.id)\\\">{{country.name}}</option>\\r\\n\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"col-form-label\\\">City</label>\\r\\n    <select class=\\\"custom-select\\\">\\r\\n      <option *ngFor=\\\"let city of cities\\\" (click)=\\\"selectedCityId = city.id\\\">{{city.name}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"col-form-label\\\">Property Type</label>\\r\\n    <select class=\\\"custom-select\\\">\\r\\n      <option *ngFor=\\\"let propertyType of propertyTypes\\\" (click)=\\\"selectedPropertyTypeId = propertyType.id\\\">{{propertyType.name}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Country } from '../../../models/country';\r\nimport { City } from '../../../models/city';\r\nimport {CoutryService} from '../../../services/country/coutry.service';\r\nimport {CityService} from '../../../services/city/city.service';\r\nimport {PropertyCreate} from '../../../models/property-create';\r\nimport { PropertyService } from '../../../services/property/property.service';\r\nimport {PropertyTypeService} from '../../../services/propertyTypy/property-type.service';\r\nimport {PropertyType} from '../../../models/property-type';\r\nimport {AuthService} from '../../../services/authentication/auth.service';\r\n\r\n@Component ({\r\n  selector: 'app-create-property',\r\n  templateUrl: './create-property.component.html',\r\n  styleUrls: ['./create-property.component.css']\r\n})\r\nexport class CreatePropertyComponent implements OnInit {\r\n\r\n  public propertyCreate: PropertyCreate;\r\n  public countries: Country[];\r\n  public cities: City[];\r\n  public propertyTypes: PropertyType[];\r\n  public selectedCityId: number;\r\n  public selectedPropertyTypeId: number;\r\n  private authenticated;\r\n\r\n  constructor(private auth: AuthService,private countryService: CoutryService,private cityService: CityService,\r\n              private propertyService: PropertyService, private propertyTypeService: PropertyTypeService) { }\r\n\r\n  ngOnInit() {\r\n    this.authenticated = this.auth.isAuthenticated;\r\n    this.propertyCreate = new PropertyCreate();\r\n    this.getCountries();\r\n    this.getPropertyTypes();\r\n  }\r\n\r\n  public getCountries(){\r\n    this.countryService.getCountry().subscribe(res => {\r\n      this.countries = res;\r\n      alert(\"pk\");\r\n    })\r\n  }\r\n\r\n  public getCities(countryId: number){\r\n    this.cityService.getCity(countryId).subscribe(res => {\r\n      this.cities = res;\r\n    })\r\n  }\r\n\r\n  public getPropertyTypes(){\r\n    this.propertyTypeService.getAllPropertyTypes().subscribe(res => {\r\n      this.propertyTypes = res;\r\n    })\r\n  }\r\n\r\n  public createProperty(){\r\n    this.propertyService.createProperty(this.propertyCreate).subscribe(res => {\r\n      alert(\"Property created\")\r\n    });\r\n\r\n\r\n  }\r\n  public getId(){\r\n    alert(this.selectedPropertyTypeId);\r\n  }\r\n}\r\n","module.exports = \".ion-md-close{\\r\\n  padding-top: 5%;\\r\\n}\\r\\n.ion-md-close:hover{\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.btn{\\r\\n  margin: 20px;\\r\\n}\\r\\n.exist-photo{\\r\\n  max-height: 100px;\\r\\n  margin: 10px;\\r\\n  border:3px solid #b3cccc!important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-start\\\">\\r\\n    <div class=\\\"col-3\\\" *ngFor=\\\"let photo of existPhotos\\\">\\r\\n      <input type=\\\"checkbox\\\" (change)=\\\"markPhoto(photo)\\\">\\r\\n      <img class=\\\"exist-photo\\\" [src]=\\\"photo.url\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <button *ngIf=\\\"existPhotos.length > 0\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePhotos()\\\">Delete</button>\\r\\n</div>\\r\\n<div class=\\\"container\\\" *ngIf=\\\"property\\\">\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"File0\\\">{{messageList[0]}}</label>\\r\\n        <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"File0\\\" #input0 (change)=\\\"addPhoto($event, 0)\\\">\\r\\n      </div>\\r\\n      <i class=\\\"icon ion-md-close\\\" (click)=\\\"clearInput(0)\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"File1\\\">{{messageList[1]}}</label>\\r\\n        <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"File1\\\" #input1 (change)=\\\"addPhoto($event, 1)\\\">\\r\\n      </div>\\r\\n      <i class=\\\"icon ion-md-close\\\" (click)=\\\"clearInput(1)\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"File2\\\">{{messageList[2]}}</label>\\r\\n        <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"File2\\\" #input2 (change)=\\\"addPhoto($event, 2)\\\">\\r\\n      </div>\\r\\n      <i class=\\\"icon ion-md-close\\\" (click)=\\\"clearInput(2)\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploadPhotos()\\\">Upload</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"clearAllInputs()\\\">add more</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {Property} from '../../../../models/property';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {PropertyService} from '../../../../services/property/property.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-upload-photo-list',\r\n  templateUrl: './upload-photo-list.component.html',\r\n  styleUrls: ['./upload-photo-list.component.css']\r\n})\r\nexport class UploadPhotoListComponent implements OnInit {\r\n  /*@Input()*/\r\n  propertyId: number;\r\n  property: Property;\r\n  existPhotos = [];\r\n  files: File[] = [];\r\n  messageList: string[] = ['add photo', 'add photo', 'add photo'];\r\n  @ViewChild('input0')\r\n  input0;\r\n  @ViewChild('input1')\r\n  input1;\r\n  @ViewChild('input2')\r\n  input2;\r\n  inputs = [];\r\n  constructor(private http: HttpClient, private propertyService: PropertyService, private route: ActivatedRoute) {}\r\n  ngOnInit() {\r\n    this.initExistPhotos();\r\n  }\r\n  initExistPhotos() {\r\n    this.propertyId = Number.parseInt( this.route.snapshot.paramMap.get('id') );\r\n    this.propertyService.getPropertyById(this.propertyId).subscribe(\r\n      pr => {\r\n        this.property = pr;\r\n        this.existPhotos = [];\r\n        for (const photo of this.property.photos) {\r\n          this.existPhotos.push({url: photo.url, isMark: false});\r\n        }\r\n      }\r\n    );\r\n  }\r\n  addPhoto(event, photoNumber: number) {\r\n    this.messageList[photoNumber] = event.target.files[0].name;\r\n    this.files[photoNumber] = event.target.files[0];\r\n  }\r\n  uploadPhotos() {\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i] && this.messageList[i] !== 'success' ) {\r\n        const uploadData = new FormData();\r\n        uploadData.append('file', this.files[i]);\r\n        this.http.post('/api/property/' + this.propertyId + '/photo', uploadData)\r\n          .subscribe(data => {\r\n              this.messageList[i] = 'success';\r\n              setTimeout(() => {this.initExistPhotos(); }, 1500);\r\n            },\r\n            err => {\r\n              this.messageList[i] = err.error.message;\r\n            });\r\n      }\r\n    }\r\n  }\r\n  clearInput(inputNumber: number) {\r\n    if (this.inputs.length < 3) {\r\n      this.inputs.push(this.input0);\r\n      this.inputs.push(this.input1);\r\n      this.inputs.push(this.input2);\r\n    }\r\n    this.inputs[inputNumber].nativeElement.value = '';\r\n    this.files[inputNumber] = null;\r\n    this.messageList[inputNumber] = 'add photo';\r\n  }\r\n  clearAllInputs() {\r\n    for (let i = 0; i < this.inputs.length; i++) {\r\n      this.clearInput(i);\r\n    }\r\n  }\r\n  markPhoto(photo) {\r\n    photo.isMark = !photo.isMark;\r\n  }\r\n  deletePhotos()  {\r\n    for (const photo of this.existPhotos) {\r\n      if (photo.isMark) {\r\n        this.http.delete('api/photo/' + photo.url.substring(photo.url.lastIndexOf('/'), photo.url.lastIndexOf('.'))).subscribe(\r\n          ans => {\r\n            this.initExistPhotos();\r\n          },\r\n          err => {\r\n            console.log(err);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  edit-property works!\\r\\n</p>\\r\\n<app-upload-photo-list></app-upload-photo-list>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, ParamMap} from '@angular/router';\r\nimport {switchMap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-edit-property',\r\n  templateUrl: './edit-property.component.html',\r\n  styleUrls: ['./edit-property.component.css']\r\n})\r\nexport class EditPropertyComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","module.exports = \"*{\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n  /*.container {*/\\r\\n\\r\\n  /*position: fixed;*/\\r\\n\\r\\n  /*}*/\\r\\n\\r\\n  .img-responsive {\\r\\n  width: 210px;\\r\\n  height: 180px;\\r\\n  position: relative ;\\r\\n}\\r\\n\"","module.exports = \"<ul style=\\\"list-style: none\\\">\\r\\n  <li *ngFor=\\\"let property of propertyList\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <img class=\\\"img-responsive\\\" alt=\\\"No Photo\\\" src={{property.photos[0].url}}>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6  card-body\\\">\\r\\n                  <div class=\\\"list-title\\\">\\r\\n                    <ul class=\\\"list-inline list-unstyled\\\">\\r\\n                      <li class=\\\"list-inline-item\\\"><h4>{{property.name}}</h4></li>\\r\\n                      <li class=\\\"list-inline-item text-warning\\\"><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i\\r\\n                        class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star-half\\\"></i></li>\\r\\n                      <li class=\\\"list-inline-item text-success\\\"><i class=\\\"fa fa-thumbs-up\\\"></i></li>\\r\\n                      <ul>\\r\\n                        <li><p *ngFor=\\\"let facility of property.facilities\\\">{{facility.name}}</p></li>\\r\\n                      </ul>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-location\\\">\\r\\n                    <small>{{property.description}}</small>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-descrip\\\">\\r\\n                    <small>{{property.contactEmail}}\\r\\n                    </small>\\r\\n                    <small>{{property.phoneNumber}}\\r\\n                    </small>\\r\\n                    <br>\\r\\n                    <small>{{property.propertyType.name}}\\r\\n                    </small>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3 border-left card-body\\\">\\r\\n                  <ul class=\\\"list-unstyled\\\">\\r\\n                    <li><h3>Rating {{property.rating}}</h3></li>\\r\\n                    <li class=\\\"text-secondary\\\">\\r\\n                      <small>{{property.id}} Reviews</small>\\r\\n                      <!--<small>{property.review}</small>-->\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                  <button type=\\\"button\\\" routerLink=\\\"apartment-list\\\"\\r\\n                          class=\\\"btn btn-outline-primary\\\"\\r\\n                          (click)=\\\"setPropertyIdInApartmentService(property.id)\\\">Select apartment</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </li>\\r\\n</ul>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {Property} from '../../../models/property';\r\nimport {PropertyService} from '../../../services/property/property.service';\r\nimport {AuthService} from '../../../services/authentication/auth.service';\r\nimport {ReviewService} from '../../../services/review/review.service';\r\nimport {ApartmentService} from '../../../services/apartment/apartment.service';\r\n\r\n@Component({\r\n  selector: 'app-list-property',\r\n  templateUrl: './list-property.component.html',\r\n  styleUrls: ['./list-property.component.css']\r\n})\r\nexport class ListPropertyComponent implements OnInit {\r\n\r\n  private authentication;\r\n\r\n  propertyList: Property[];\r\n\r\n\r\n  constructor(private propertyService: PropertyService,\r\n              private reviewService: ReviewService,\r\n              private apartmentService: ApartmentService,\r\n              private auth: AuthService ) {}\r\n\r\n\r\n  reviewCount: number;\r\n  ngOnInit() {\r\n    this.authentication = this.auth.isAuthenticated;\r\n      this.getProperties();\r\n  }\r\n\r\n  public getProperties() {\r\n    this.propertyService.getProperties().subscribe(properties => {\r\n     this.propertyList = properties;\r\n    });\r\n  }\r\n\r\n  public getReviewCount(id: number) {\r\n    return this.reviewService.getReviewCountByPropertyId(id).subscribe(reviewCount => {\r\n      return reviewCount;\r\n    });\r\n  }\r\n\r\n  public setPropertyIdInApartmentService(propertyId: number) {\r\n    this.apartmentService.setPropertyId(propertyId);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Property } from '../../../../models/property';\r\nimport { PropertyService } from '../../../../services/property/property.service';\r\n\r\n@Component ({\r\n  selector: 'app-property-item',\r\n  templateUrl: './property-item.component.html',\r\n  styleUrls: ['./property-item.component.css']\r\n})\r\nexport class PropertyItemComponent implements OnInit {\r\n\r\n  constructor(private propertyService: PropertyService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"#blocker{\\r\\n  position: fixed;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  top: 0;\\r\\n  background: rgba(0,0,0,0.5);\\r\\n}\\r\\n#zoom-img{\\r\\n  position: fixed;\\r\\n  z-index: 99;\\r\\n  opacity: 1;\\r\\n  cursor: zoom-out;\\r\\n  max-height: 70%;\\r\\n  border:5px solid #fff!important;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-start\\\">\\r\\n    <div class=\\\"col-3\\\" *ngFor=\\\"let photo of photos\\\" (click)=\\\"openPhoto(photo.url)\\\">\\r\\n      <app-photo [photoUrl]='photo.url'></app-photo>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-container *ngIf=\\\"opened\\\">\\r\\n  <div id=\\\"blocker\\\" (click)=\\\"closePhoto()\\\"><img id=\\\"zoom-img\\\" [src]=\\\"openedPhotoUrl\\\" (click)=\\\"closePhoto()\\\">\\r\\n  </div>\\r\\n</ng-container>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Photo} from '../../../models/photo';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {PropertyService} from '../../../services/property/property.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-list',\r\n  templateUrl: './photo-list.component.html',\r\n  styleUrls: ['./photo-list.component.css']\r\n})\r\nexport class PhotoListComponent implements OnInit {\r\n  /*@Input() urls: string[];*/\r\n  propertyId: number;\r\n  photos: Photo[];\r\n  openedPhotoUrl = '';\r\n  opened = false;\r\n  constructor(private route: ActivatedRoute, private propertyService: PropertyService) { }\r\n\r\n  ngOnInit() {\r\n    this.propertyId = Number.parseInt( this.route.snapshot.paramMap.get('id') );\r\n    this.propertyService.getPropertyById(this.propertyId)\r\n                          .subscribe(property => this.photos = property.photos);\r\n  }\r\n  openPhoto(url: string) {\r\n    this.openedPhotoUrl = url;\r\n    this.opened = true;\r\n  }\r\n  closePhoto() {\r\n    this.opened = false;\r\n  }\r\n}\r\n\r\n","module.exports = \".photo{\\r\\n  border:1px solid #ccc!important;\\r\\n  padding:8px !important;\\r\\n  max-width: 230px;\\r\\n  height: 160px;\\r\\n  margin: 6px;\\r\\n  cursor: zoom-in;\\r\\n  transition: opacity .4s;\\r\\n}\\r\\n.photo:hover {\\r\\n  opacity: .8;\\r\\n}\\r\\n\"","module.exports = \"<img [src]=\\\"photoUrl\\\" class=\\\"photo\\\" >\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-photo',\r\n  templateUrl: './photo.component.html',\r\n  styleUrls: ['./photo.component.css']\r\n})\r\nexport class PhotoComponent implements OnInit {\r\n  @Input() photoUrl: string;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>Property Details</h1>\\r\\n<app-photo-list></app-photo-list>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-property',\r\n  templateUrl: './property.component.html',\r\n  styleUrls: ['./property.component.css']\r\n})\r\nexport class PropertyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  review works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n// import {Review} from '../../models/review';\r\n\r\n\r\n\r\n@Component ({\r\n  selector: 'app-review',\r\n  templateUrl: './review.component.html',\r\n  styleUrls: ['./review.component.css']\r\n})\r\nexport class ReviewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".btn{\\r\\n  margin: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Where are you go?</h1>\\r\\n  <form class=\\\"form-inline\\\">\\r\\n    <label class=\\\"my-1 mr-2\\\" for=\\\"country\\\">Country</label>\\r\\n    <select class=\\\"custom-select my-1 mr-sm-2\\\" id=\\\"country\\\">\\r\\n      <option value=\\\"0\\\">Ukraine</option>\\r\\n      <option value=\\\"1\\\">USA</option>\\r\\n      <option value=\\\"2\\\">Great Britan</option>\\r\\n      <option value=\\\"3\\\">Germany</option>\\r\\n    </select>\\r\\n    <label class=\\\"my-1 mr-2\\\" for=\\\"city\\\">City</label>\\r\\n    <select class=\\\"custom-select my-1 mr-sm-2\\\" id=\\\"city\\\">\\r\\n      <option value=\\\"0\\\">Choose...</option>\\r\\n      <option value=\\\"1\\\">One</option>\\r\\n      <option value=\\\"2\\\">Two</option>\\r\\n      <option value=\\\"3\\\">Three</option>\\r\\n    </select>\\r\\n    <label for=\\\"personCount\\\" class=\\\"my-1 mr-2\\\">How much persons?</label>\\r\\n    <input type=\\\"number\\\" min=\\\"1\\\" max=\\\"20\\\" class=\\\"form-control\\\" id=\\\"personCount\\\">\\r\\n  </form>\\r\\n  <label for=\\\"checkin\\\" class=\\\"col-sm-2 col-form-label\\\">Check in</label>\\r\\n  <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"checkin\\\">\\r\\n  <label for=\\\"checkout\\\" class=\\\"col-sm-2 col-form-label\\\">Check out</label>\\r\\n  <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"checkout\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Search</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-form',\r\n  templateUrl: './search-form.component.html',\r\n  styleUrls: ['./search-form.component.css']\r\n})\r\nexport class SearchFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-search-form></app-search-form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"#menucard {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\"","module.exports = \"<div id=\\\"menucard\\\">\\r\\n    <div>\\r\\n        <h1 class=\\\"display-4\\\" style=\\\"text-align: center\\\">BookingLite</h1>\\r\\n    <div class=\\\"card\\\" style=\\\"width:400px\\\">\\r\\n        <article class=\\\"card-body\\\">\\r\\n            <h4 class=\\\"card-title mb-4 mt-1\\\">Sign in</h4>\\r\\n            <form #loginForm=ngForm (ngSubmit)=\\\"signIn(loginForm)\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Your email</label>\\r\\n                    <input id=\\\"email\\\" required [(ngModel)]=\\\"loginDto.email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\r\\n                </div> \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Your password</label>\\r\\n                    <input id=\\\"password\\\" required [(ngModel)]=\\\"loginDto.password\\\"  name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"******\\\" type=\\\"password\\\" >\\r\\n                </div> \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Login</button>\\r\\n                </div> \\r\\n                <a href=\\\"/register\\\">Don’t have account? Sign Up!</a>\\r\\n            </form>\\r\\n        </article>\\r\\n    </div> \\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {RegisterUser} from '../../../models/user-register';\r\nimport {AuthService} from '../../../services/authentication/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginDto = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.signOut();\r\n  }\r\n\r\n  signIn(form: FormGroup) {\r\n    this.auth.signIn(this.loginDto)\r\n      .subscribe(res => {\r\n        console.log('Hello token');\r\n        console.log(res);\r\n        this.auth.saveToken(res);\r\n        this.auth.isAuthenticated = true;\r\n        this.router.navigate(['/search']);\r\n      });\r\n  }\r\n\r\n  getToken() {\r\n    console.log('in getToken component');\r\n    console.log('in getToken component111', this.auth.getToken());\r\n  }\r\n\r\n  signOut() {\r\n    this.auth.signOut();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"menucard\\\">\\r\\n    <div>\\r\\n        <h1 class=\\\"display-4\\\" style=\\\"text-align: center\\\">StudCloud</h1>\\r\\n        <div class=\\\"card\\\" style=\\\"width:400px\\\">\\r\\n            <article class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title mb-4 mt-1\\\">Sign Up</h4>\\r\\n                <form>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Your Name</label>\\r\\n                        <input id=\\\"name\\\" name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" type=\\\"text\\\">\\r\\n                    </div> \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Your email</label>\\r\\n                        <input id=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\r\\n                    </div> \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Your password</label>\\r\\n                        <input id=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"******\\\" type=\\\"password\\\">\\r\\n                    </div> \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"> Sign Up  </button>\\r\\n                    </div> \\r\\n                </form>\\r\\n            </article>\\r\\n        </div> \\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  user works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  ingoreRoutes = ['/api/login', '/api/register'];\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n  if (!(this.ingoreRoutes.includes(request.url))) {\r\n    // add authorization header with jwt token if available\r\n    const token = localStorage.getItem('token');\r\n    console.log('Used token', token);\r\n    request = request.clone({\r\n          setHeaders: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n  }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {Apartment} from './apartment';\r\nimport {User} from './user';\r\nimport {Review} from './review';\r\nimport {BookingStatus} from './booking-status';\r\n\r\n\r\nexport class Booking {\r\n  bookingId: number;\r\n  apartment: Apartment;\r\n  user: User;\r\n  checkIn: string;\r\n  checkOut: string;\r\n  totalPrice: number;\r\n  bookingStatus: BookingStatus;\r\n  review: Review;\r\n}\r\n","export class CreateApartment {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  typeId: number;\r\n  amenitiesId: number[];\r\n}\r\n","import { PropertyType } from './property-type';\r\nimport { Facility } from './facility';\r\nimport {Photo} from './photo';\r\nimport {Address} from './address';\r\nimport {Country} from './country';\r\nimport {City} from './city';\r\n\r\nexport class PropertyCreate {\r\n  name: string;\r\ndescription: string;\r\nrating: number;\r\nphoneNumber: string;\r\ncontactEmail: string;\r\naddress: Address;\r\ncity:City;\r\ncountryId:number;\r\npropertyTypeId: number;\r\nfacilities: number[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Apartment} from '../../models/apartment';\r\nimport {tap} from 'rxjs/operators';\r\nimport {ApartmentType} from '../../models/apartment-type';\r\nimport {Amenity} from '../../models/amenity';\r\nimport {CreateApartment} from '../../models/create-apartment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApartmentService {\r\n  private apartmentUrl = '/api/property/';\r\n  private typeUrl = '/api/create-apartment/apartment-type';\r\n  private amenityUrl = '/api/create-apartment/amenities';\r\n  private propId: number;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public setPropertyId(propertyId: number) {\r\n    this.propId = propertyId;\r\n  }\r\n\r\n  public getAllApartments(): Observable<Apartment[]> {\r\n    return this.http.get<Apartment[]>(`${this.apartmentUrl}/${this.propId}/apartment`);\r\n  }\r\n\r\n  public getApartmentType(): Observable<ApartmentType[]> {\r\n    return this.http.get<ApartmentType[]>(this.typeUrl);\r\n  }\r\n\r\n  public getAmenities(): Observable<Amenity[]> {\r\n    return this.http.get<Amenity[]>(this.amenityUrl);\r\n  }\r\n\r\n  public createApartment(createApartment: CreateApartment) {\r\n    return this.http.post(this.apartmentUrl, createApartment,\r\n      {headers: new HttpHeaders({\r\n          'Content-Type': 'application/json' }),\r\n      responseType: 'text'\r\n      })\r\n      .pipe(tap(res => console.log('created apartments')\r\n      ));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {RegisterUser} from '../../models/user-register';\r\nimport {User} from '../../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private authenticated = false;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  signIn(model: RegisterUser): Observable<any> {\r\n    console.log('In auth service');\r\n    console.log('json', JSON.stringify({email: model.email, password: model.password}));\r\n    return this.http.post('/api/login', JSON.stringify({email: model.email, password: model.password}),\r\n      {headers: new HttpHeaders({\r\n          'Content-Type':  'application/json' }),\r\n        responseType: 'text'\r\n      }  );\r\n  }\r\n\r\n  saveToken(token: string) {\r\n    console.log('save token', token);\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  getToken(): string {\r\n    console.log('in get token');\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  signOut(): boolean {\r\n    localStorage.clear();\r\n    return this.authenticated = false;\r\n  }\r\n\r\n  get isAuthenticated(): boolean {\r\n    return localStorage.getItem('token') != null;\r\n  }\r\n\r\n  set isAuthenticated(val: boolean) {\r\n    this.authenticated = val ;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport {Booking} from '../../models/booking';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingService {\r\n\r\n  private bookingUrl = 'api/bookings'\r\n  private bookingUrl2 = 'api/booking'\r\n  private nowDate: Date;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getBookings(): Observable<Booking[]> {\r\n    return this.http.get<Booking []>(this.bookingUrl)\r\n      .pipe(tap(res => console.log('catch bookings')\r\n      ));\r\n  }\r\n\r\n  getBooking(id: number): Observable<Booking> {\r\n    const url = `${this.bookingUrl2}/${id}`;\r\n    return this.http.get<Booking>(url)\r\n    .pipe(tap(res => console.log('catch ONE booking')\r\n      ));\r\n  }\r\n\r\n  cancelBookings(id: number) {\r\n    const url = `${this.bookingUrl2}/${id}`;\r\n    return this.http.put(url, \r\n      {headers: new HttpHeaders({\r\n      'Content-Type':  'application/json' })\r\n  })\r\n      .pipe(tap(res => console.log('cancel booking')      \r\n      ));\r\n  }\r\n\r\n  isCanceled( bookingStatus: string):boolean {\r\n    const canceledStatus = 'Canceled';\r\n    if(bookingStatus == canceledStatus){\r\n     //console.log('iscancel booking TRUE');  \r\n      return true;\r\n    }\r\n    else{\r\n      //console.log('iscancel booking FALSE');  \r\n      return false;\r\n    }\r\n  }\r\n\r\n  calculateNumberOfDates(checkIn, checkOut): number{\r\n    let dateChackIn = new Date (checkIn);\r\n    let dateChackOut = new Date (checkOut);\r\n    let oneDay= 24*60*60*1000;\r\n    return Math.round((dateChackOut.getTime() - dateChackIn.getTime()) / (oneDay) );  \r\n  }\r\n\r\n  isCheckBookingDate(checkIn, checkOut):boolean {\r\n    let dateChackIn = new Date (checkIn);\r\n    let dateChackOut = new Date (checkOut);\r\n    this.nowDate = new Date();\r\n    //console.log('date', d);\r\n    //console.log('this.today', this.nowDate);\r\n    //console.log('date1', checkIn);\r\n    //console.log('date2', checkOut);\r\n    if(dateChackIn > this.nowDate || dateChackOut > this.nowDate){\r\n      //console.log('isCheckBookingDate', true);\r\n      return true;\r\n    }\r\n    else {\r\n      //console.log('isCheckBookingDate', false);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport { City } from '../../models/city';\r\nimport {Observable} from 'rxjs';\r\nimport {Country} from '../../models/country';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CityService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getCity(countryId: number): Observable<City[]> {\r\n    return this.http.get<City[]>(`api/country/${countryId}/cities`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport { Country } from '../../models/country';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoutryService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getCountry(): Observable<Country[]> {\r\n    return this.http.get<Country[]>(\"api/countries\")\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {HttpHeaders} from '@angular/common/http';\r\n\r\n// import { Property } from '../../models/property-create';\r\nimport { Property } from '../../models/property';\r\nimport {PropertyCreate} from '../../models/property-create';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PropertyService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public createProperty(model: PropertyCreate){\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.post(\"localhost:8080/api/property\", model, httpOptions);\r\n  }\r\n\r\n  public getProperties(): Observable<Property[]> {\r\n    return this.http.get<Property[]>('api/property');\r\n  }\r\n\r\n  public getPropertyById(id: number): Observable<Property> {\r\n    return this.http.get<Property>('api/property/' + id);\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport { PropertyType } from '../../models/property-type';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PropertyTypeService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getAllPropertyTypes(): Observable<PropertyType[]>{\r\n    return this.http.get<PropertyType[]>(\"api/propertytype\")\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {Review} from '../../models/review';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Property} from '../../models/property';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReviewService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getReviewCountByPropertyId(id:number): Observable<number>{\r\n    return this.http.get<number>(\"api/property/${id}/reviews/count\");\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}